{"version":3,"sources":["redux/contacts/selectors.js","services/contactsAPI.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/contacts/actions.js","components/Header/Header.js","components/Contacts/Contacts.js","services/isUniqueContact.js","components/ContactForm/ContactForm.js","redux/contacts/operations.js","components/ContactList/DeleteButton.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/AuthForm/AuthForm.js","components/RegistrationForm/RegistrationForm.js","components/UserForm/UserForm.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.module.css","components/UserForm/UserForm.module.css","components/Filter/Filter.module.css","App.module.css","components/AuthForm/AuthForm.module.css","components/RegistrationForm/RegistrationForm.module.css"],"names":["contactsSelector","phoneBook","contacts","filterSelector","filter","getVisibleContacts","createSelector","name","toLowerCase","includes","getFilter","getContacts","Axios","axios","create","baseURL","setAuthToket","token","defaults","headers","common","a","get","data","addContact","contact","post","deleteContact","id","delete","authSingUp","userInfo","response","authLogIn","authData","authLogOut","authCurrentUser","register","createAsyncThunk","credentials","logIn","console","log","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","filterContacts","createAction","getContactsRequest","getContactsSuccess","getContactsReject","addContactRequest","addContactSuccess","addContactReject","deleteContactRequest","deleteContactSuccess","deleteContactReject","actions","StyledTitle","withStyles","root","fontSize","Typography","StyledToolBar","backgroundColor","display","justifyContent","Toolbar","Header","dispatch","useDispatch","userLoggedIn","useSelector","AppBar","position","variant","noWrap","IconButton","onClick","Contacts","children","isUniqueContact","newName","findIndex","trim","ContactForm","useState","setName","number","setNumber","onSubmit","event","contactsAPI","alert","className","s","form","htmlFor","formName","type","placeholder","onChange","e","target","value","formatPhoneNumberIntl","String","onFocus","btn","DeleteButton","handler","ContactListItem","info","onDeleteHandler","item","wrap","phone","ContactList","length","list","map","Filter","styles","container","input","AuthForm","useForm","handleSubmit","errors","reset","userMail","password","ref","RegistrationForm","userName","required","min","pattern","a11yProps","index","TabPanel","props","other","role","hidden","aria-labelledby","UserForm","tab","setTab","wrapper","Tabs","tabNum","Tab","label","App","useEffect","contactsReducer","createReducer","filterReducer","isLoadingReducer","reducer","combineReducers","isLoading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fd0cc1a8.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nexport const contactsSelector = ({ phoneBook }) => phoneBook.contacts;\r\nexport const filterSelector = ({ phoneBook }) => phoneBook.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [contactsSelector, filterSelector],\r\n  (contacts, filter) => {\r\n    if (filter) {\r\n      return contacts.filter(({ name }) => {\r\n        return name.toLowerCase().includes(filter.toLowerCase());\r\n      });\r\n    }\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const getFilter = createSelector(filterSelector, filter => {\r\n  return filter;\r\n});\r\n\r\nexport const getContacts = createSelector(contactsSelector, contacts => {\r\n  return contacts;\r\n});\r\n","import axios from 'axios';\r\n\r\nconst Axios = axios.create({\r\n  baseURL: 'https://goit-phonebook-api.herokuapp.com',\r\n});\r\n\r\nexport const setAuthToket = token => {\r\n  Axios.defaults.headers.common['Authorization'] = token;\r\n};\r\n\r\nexport const getContacts = async () => {\r\n  const { data } = await Axios.get('/contacts');\r\n  return data;\r\n};\r\n\r\nexport const addContact = async contact => {\r\n  return await Axios.post('/contacts', contact);\r\n};\r\n\r\nexport const deleteContact = async id => {\r\n  await Axios.delete(`/contacts/${id}`);\r\n};\r\n\r\nexport const updateContact = async (id, contact) => {\r\n  await Axios.patch(`/contacts/${id}`, contact);\r\n};\r\n\r\nexport const authSingUp = async userInfo => {\r\n  const response = await Axios.post('/users/signup', userInfo);\r\n  return response;\r\n};\r\n\r\nexport const authLogIn = async authData => {\r\n  const response = await Axios.post('/users/login', authData);\r\n  return response;\r\n};\r\n\r\nexport const authLogOut = async () => {\r\n  const response = await Axios.post('/users/logout');\r\n  return response;\r\n};\r\n\r\nexport const authCurrentUser = async () => {\r\n  const response = await Axios.get('/users/current');\r\n  return response;\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  setAuthToket,\r\n  authSingUp,\r\n  authLogIn,\r\n  authLogOut,\r\n  authCurrentUser,\r\n} from '../../services/contactsAPI';\r\n\r\nconst token = {\r\n  set(token) {\r\n    setAuthToket(`Bearer ${token}`);\r\n  },\r\n  unset() {\r\n    setAuthToket(``);\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await authSingUp(credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    console.log(credentials);\r\n    const { data } = await authLogIn(credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await authLogOut();\r\n    token.unset();\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await authCurrentUser();\r\n      return data;\r\n    } catch (error) {\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction(\r\n  'phoneBook/filterContacts',\r\n  filter => ({\r\n    payload: filter,\r\n  }),\r\n);\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsReject = createAction('contacts/getContactsReject');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactReject = createAction('contacts/addContactReject');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactReject = createAction('contacts/deleteContactReject');\r\n\r\nconst actions = {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsReject,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactReject,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactReject,\r\n  filterContacts,\r\n};\r\n\r\nexport default actions;\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authOperations, authSelectors } from '../../redux/auth';\r\n\r\nconst StyledTitle = withStyles({\r\n  root: {\r\n    fontSize: 30,\r\n  },\r\n})(Typography);\r\n\r\nconst StyledToolBar = withStyles({\r\n  root: {\r\n    backgroundColor: '#9ecaed',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n})(Toolbar);\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n  const userLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(authOperations.logOut());\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <StyledToolBar>\r\n        <StyledTitle variant=\"h1\" noWrap>\r\n          <PhoneIcon />\r\n          Phonebook\r\n        </StyledTitle>\r\n\r\n        {userLoggedIn && (\r\n          <IconButton onClick={onClickHandler}>\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        )}\r\n      </StyledToolBar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Contacts({ children }) {\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","const isUniqueContact = (contacts, newName) => {\r\n  const index = contacts.findIndex(\r\n    ({ name }) => name.toLowerCase() === newName.toLowerCase().trim(),\r\n  );\r\n  return index === -1 ? true : false;\r\n};\r\n\r\nexport default isUniqueContact;\r\n","import 'react-phone-number-input/style.css';\r\n\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\nimport { addContact } from '../../redux/contacts/operations';\r\nimport isUniqueContact from '../../services/isUniqueContact';\r\n\r\nimport PhoneInput, { formatPhoneNumberIntl } from 'react-phone-number-input';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const onSubmit = event => {\r\n    console.log(event);\r\n    if (isUniqueContact(contacts, name)) {\r\n      dispatch(addContact(name, number));\r\n    } else {\r\n      alert(`${name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = e => {\r\n    const value = formatPhoneNumberIntl(String(e));\r\n    setNumber(value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={s.form}>\r\n      <label htmlFor=\"formName\">\r\n        Name\r\n        <input\r\n          id=\"formName\"\r\n          className={s.formName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"formNumber\">\r\n        Number\r\n        <PhoneInput\r\n          id=\"formNumber\"\r\n          // className={s.formNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Number\"\r\n          onChange={handleNumberChange}\r\n          onFocus={() => {}}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// function ContactForm({ onAddContact }) {\r\n//   const [name, setName] = useState('');\r\n//   const [number, setNumber] = useState('');\r\n\r\n//   const handleChange = event => {\r\n//     const { name, value } = event.target;\r\n//     switch (name) {\r\n//       case 'name':\r\n//         setName(value);\r\n//         break;\r\n//       case 'number':\r\n//         setNumber(value);\r\n//         break;\r\n//       default:\r\n//         break;\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = event => {\r\n//     event.preventDefault();\r\n//     onAddContact(name, number);\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} className={s.form}>\r\n//       <label htmlFor=\"formName\">\r\n//         Name\r\n//         <input\r\n//           required\r\n//           id=\"formName\"\r\n//           className={s.formName}\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           placeholder=\"Name\"\r\n//           value={name}\r\n//           onChange={handleChange}\r\n//         />\r\n//       </label>\r\n//       <label htmlFor=\"formNumber\">\r\n//         Number\r\n//         <input\r\n//           id=\"formNumber\"\r\n//           className={s.formNumber}\r\n//           type=\"tel\"\r\n//           name=\"number\"\r\n//           placeholder=\"Number\"\r\n//           value={number}\r\n//           required\r\n//           onChange={handleChange}\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\" className={s.btn}>\r\n//         Add contact\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\nexport default ContactForm;\r\n","import * as contactsAPI from '../../services/contactsAPI';\r\nimport actions from './actions';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(actions.getContactsRequest());\r\n  try {\r\n    const contacts = await contactsAPI.getContacts();\r\n    dispatch(actions.getContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(actions.getContactsReject(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n  try {\r\n    const contact = { name, number };\r\n    const response = await contactsAPI.addContact(contact);\r\n    dispatch(actions.addContactSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactReject(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(actions.getContactsRequest());\r\n  try {\r\n    await contactsAPI.deleteContact(id);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactReject(error));\r\n  }\r\n};\r\n","import s from './ContactList.module.scss';\r\n\r\nfunction DeleteButton({ handler }) {\r\n  return (\r\n    <button className={s.btn} onClick={handler}>\r\n      &#10008;\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;\r\n","import DeleteButton from './DeleteButton';\r\nimport s from './ContactList.module.scss';\r\n\r\nfunction ContactListItem({ info, onDeleteHandler }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.wrap}>\r\n        <span className={s.name}>{info.name}</span>\r\n        <span className={s.phone}>{info.number}</span>\r\n      </p>\r\n      <DeleteButton handler={onDeleteHandler} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactListItem;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport s from './ContactList.module.scss';\r\n\r\nimport { getVisibleContacts } from '../../redux/contacts/selectors.js';\r\nimport { deleteContact } from '../../redux/contacts/operations';\r\n\r\nfunction ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  return (\r\n    contacts.length > 0 && (\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactListItem\r\n              info={{ name, number }}\r\n              key={id}\r\n              onDeleteHandler={() => dispatch(deleteContact(id))}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport actions from '../../redux/contacts/actions';\r\nimport { getFilter } from '../../redux/contacts/selectors';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <label>\r\n        Find Contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          value={filter}\r\n          onChange={e => dispatch(actions.filterContacts(e.target.value))}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth/';\r\n\r\nimport s from './AuthForm.module.css';\r\n\r\nfunction AuthForm({ styles }) {\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = ({ userMail, password }) => {\r\n    dispatch(authOperations.logIn({ email: userMail, password }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={styles}>\r\n      <label htmlFor=\"userMail\">e-mail</label>\r\n      <input\r\n        type=\"mail\"\r\n        name=\"userMail\"\r\n        id=\"userMail\"\r\n        placeholder=\"e-mail...\"\r\n        ref={register()}\r\n      />\r\n      <label htmlFor=\"password\">password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"password...\"\r\n        id=\"password\"\r\n        ref={register()}\r\n      />\r\n      <button className={s.btn} type=\"submit\">\r\n        Log in\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth/';\r\n\r\nimport s from './RegistrationForm.module.css';\r\n\r\nfunction RegistrationForm({ styles }) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = ({ userName, userMail, password }) => {\r\n    dispatch(\r\n      authOperations.register({ name: userName, email: userMail, password }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form className={styles} onSubmit={handleSubmit(onSubmit)}>\r\n      <label htmlFor=\"userName\">User name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"userName\"\r\n        id=\"userName\"\r\n        placeholder=\"User name...\"\r\n        ref={register({ required: true, min: 3 })}\r\n      />\r\n      <label htmlFor=\"userMail\">\r\n        e-mail {errors.userMail && console.log(errors)}\r\n      </label>\r\n      <input\r\n        type=\"mail\"\r\n        name=\"userMail\"\r\n        id=\"userMail\"\r\n        placeholder=\"e-mail...\"\r\n        ref={register({\r\n          required: true,\r\n          pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i,\r\n        })}\r\n      />\r\n      <label htmlFor=\"password\">\r\n        Password {errors.password && console.log(errors)}\r\n      </label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        placeholder=\"password...\"\r\n        ref={register({ required: true, min: 7 })}\r\n      />\r\n      <button className={s.btn} type=\"submit\">\r\n        Sing Up\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import { useState } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport AuthForm from '../AuthForm';\r\nimport RegistrationForm from '../RegistrationForm';\r\nimport s from './UserForm.module.css';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UserForm() {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const handleChange = (_, tabNum) => setTab(tabNum);\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Tabs value={tab} onChange={handleChange}>\r\n        <Tab label=\"Authorization\" {...a11yProps(0)} />\r\n        <Tab label=\"Registration\" {...a11yProps(1)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={tab} index={0}>\r\n        <AuthForm styles={s.form} />\r\n      </TabPanel>\r\n      <TabPanel value={tab} index={1}>\r\n        <RegistrationForm styles={s.form} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport { getContacts } from './redux/contacts/selectors.js';\r\nimport { authOperations, authSelectors } from './redux/auth';\r\nimport { getContacts as fetchContacts } from './redux/contacts/operations';\r\n\r\nimport Header from './components/Header';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport UserForm from './components/UserForm';\r\n\r\nfunction App() {\r\n  const contacts = useSelector(getContacts);\r\n  const checkingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n  const userLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (userLoggedIn) {\r\n      dispatch(fetchContacts());\r\n    }\r\n  }, [dispatch, userLoggedIn]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className={styles.container}>\r\n        {!userLoggedIn ? (\r\n          <UserForm />\r\n        ) : (\r\n          <>\r\n            <ContactForm />\r\n\r\n            {contacts.length > 0 ? (\r\n              <Contacts>\r\n                <Filter />\r\n                <ContactList contacts={contacts} />\r\n              </Contacts>\r\n            ) : (\r\n              <p>Your phonebook is empty at this moment</p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsReject,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactReject,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactReject,\r\n  filterContacts,\r\n} from './actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [getContactsSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, action) => {\r\n    const result = state.filter(contact => contact.id !== action.payload);\r\n    return result;\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsReject]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactReject]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactReject]: () => false,\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport reducer from './contacts/reducers';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: reducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport 'normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__37Uwf\",\"block\":\"ContactList_block__3TUU5\",\"item\":\"ContactList_item__JIdX6\",\"name\":\"ContactList_name__2Ueap\",\"phone\":\"ContactList_phone__T28iI\",\"wrap\":\"ContactList_wrap__1XOcF\",\"btn\":\"ContactList_btn__2v5wf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__30S35\",\"input\":\"ContactForm_input__4kIz1\",\"formName\":\"ContactForm_formName__E6pbC ContactForm_input__4kIz1\",\"formNumber\":\"ContactForm_formNumber__4Qw8t ContactForm_input__4kIz1\",\"btn\":\"ContactForm_btn__1ySx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserForm_wrapper__2BdE_\",\"form\":\"UserForm_form__X6uMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1ri4c\",\"input\":\"Filter_input__1cHnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1yNWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"AuthForm_btn__363dM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"RegistrationForm_btn__ve2DL\"};"],"sourceRoot":""}